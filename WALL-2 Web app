<!DOCTYPE html>
<html>
<head>
    <title>Dall-E Webapp</title>
    <link rel="stylesheet" type="text/css" href="css/styles.css">
    <style>
        body {
            background-color: #f2f2f2;
            font-family: Arial, sans-serif;
            color: #333;
        }
        fieldset {
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.1);
            padding: 20px;
        }
        input, textarea, button, select {
            width: 100%;
            box-sizing: border-box;
            padding: 10px;
            font-size: 18px;
            margin-bottom: 10px;
        }
        button {
            background-color: #007BFF;
            color: #fff;
            border: none;
        }
        button:disabled {
            background-color: #ccc;
        }
        img {
            margin-top: 10px;
            max-width: 100%;
            height: auto;
        }
    </style>
</head>
<body>
    <h1>Welcome to DALL-E Generator</h1>
    <p>Create AI-generated images based on your description</p>
    <fieldset>
      <div>
        <label for="api-key">API Key:</label>
        <input type="text" id="api-key" name="api-key">
      </div>
      <div>
        <label for="text-prompt">Text Prompt:</label>
        <input type="text" id="text-prompt" name="text-prompt">
      </div>
      <div>
        <label for="image-count">Image Count (1-4):</label>
        <input type="number" id="image-count" name="image-count">
      </div>
      <div>
        <label for="image-size">Image Size:</label>
        <select id="image-size" name="image-size">
          <option value="256x256">256x256</option>
          <option value="512x512">512x512</option>
		  <option value="1024x1024">1024x1024</option>
        </select>
      </div>
      <button id="button-request">Generate Images</button>
    </fieldset>
    <p id="request-status"></p>
    <div id="image-container"></div>
    
    <script>
    // URL for POST requests
    const dalleEndpoint = 'https://api.openai.com/v1/images/generations';

    // Fetch DOM elements
    const reqButton = document.getElementById('button-request');
    const reqStatus = document.getElementById('request-status');

    // Attach click behavior to the button
    reqButton.onclick = function () {

      reqButton.disabled = true;

      // Give some feedback to user
      reqStatus.innerHTML = "Request started...";

      // Fetch image request data
      const key = document.getElementById('api-key').value;
      const prompt = document.getElementById('text-prompt').value;
      const count = Number(document.getElementById('image-count').value);
      const size = document.getElementById('image-size').value;

      // Form the request body according to the API:
      const reqBody = {
        prompt: prompt,
        n: count,
        size: size,
        response_format: 'url',
      };

      // Form the data for a POST request:
      const reqParams = {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${key}`,
        },
        body: JSON.stringify(reqBody)
      }

      // Use the Fetch API to do an async POST request to OpenAI:
      fetch(dalleEndpoint, reqParams)
        .then(res => res.json())
        .then(json => addImages(json, prompt))
        .catch(error => {
          reqStatus.innerHTML = 'Error: ' + error.message;
          reqButton.disabled = false;
        });
    }

    /**
     * Adds images on the page 
     * @param {Obj} jsonData The Dall-E API response
     * @param {String} prompt The original prompt that generated the images
     */
    function addImages(jsonData, prompt) {

      reqButton.disabled = false;

      // Handle a possible error response from the API
      if (jsonData.error) {
        reqStatus.innerHTML = 'ERROR: ' + jsonData.error.message;
        return;
      }
      
      // Parse the response object, deserialize the image data, 
      // and attach new images to the page.
      const container = document.getElementById('image-container');
      container.innerHTML = ""; // clear previous images
      for (let i = 0; i < jsonData.data.length; i++) {
        let imgData = jsonData.data[i];
        let img = document.createElement('img');
        img.src = imgData.url;
        img.alt = prompt;
        container.prepend(img);
      }

      reqStatus.innerHTML = jsonData.data.length +' images received for "' + prompt + '"';
    }
    </script>
</body>
</html>
